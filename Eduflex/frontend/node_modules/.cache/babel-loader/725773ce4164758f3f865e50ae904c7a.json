{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js';\nimport CButton from '../button/CButton';\nimport CLink from '../link/CLink';\nimport { Context } from './CDropdown'; //component - CoreUI / CDropdownToggle\n\nvar CDropdownToggle = function CDropdownToggle(props) {\n  var _togglerAttrs;\n  var className = props.className,\n    innerRef = props.innerRef,\n    onClick = props.onClick,\n    caret = props.caret,\n    split = props.split,\n    tag = props.tag,\n    attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\", \"onClick\", \"caret\", \"split\", \"tag\"]);\n  var _useContext = useContext(Context),\n    reference = _useContext.reference,\n    setReference = _useContext.setReference,\n    isOpen = _useContext.isOpen,\n    setIsOpen = _useContext.setIsOpen,\n    inNav = _useContext.inNav,\n    setSplit = _useContext.setSplit;\n  innerRef && innerRef(reference);\n  useEffect(function () {\n    setSplit(split);\n  });\n  var click = function click(e) {\n    if (props.disabled) {\n      return;\n    }\n    onClick && onClick(e);\n    setIsOpen(!isOpen);\n  };\n  var Tag = tag || (inNav ? CLink : CButton);\n  var classes = classNames(className, {\n    'dropdown-toggle': caret && !split,\n    'nav-link': inNav\n  });\n  var togglerAttrs = (_togglerAttrs = {\n    onClick: click,\n    'aria-expanded': isOpen ? 'true' : 'false',\n    'aria-haspopup': 'true',\n    'aria-label': 'Dropdown toggle'\n  }, _togglerAttrs[\"\" + (tag && typeof tag === 'string' ? 'ref' : 'innerRef')] = setReference, _togglerAttrs['role'] = Tag === CButton ? null : 'button', _togglerAttrs);\n  if (split) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CButton, attributes, props.children), /*#__PURE__*/React.createElement(CButton, _extends({\n      className: \"dropdown-toggle dropdown-toggle-split\"\n    }, togglerAttrs, attributes), ''));\n  } else {\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      className: classes\n    }, togglerAttrs, attributes));\n  }\n};\nCDropdownToggle.propTypes = {\n  tag: tagPropType,\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  caret: PropTypes.bool,\n  onClick: PropTypes.func,\n  split: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nCDropdownToggle.defaultProps = {\n  caret: true\n};\nexport default CDropdownToggle;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","useContext","useEffect","PropTypes","classNames","tagPropType","CButton","CLink","Context","CDropdownToggle","props","_togglerAttrs","className","innerRef","onClick","caret","split","tag","attributes","_useContext","reference","setReference","isOpen","setIsOpen","inNav","setSplit","click","e","disabled","Tag","classes","togglerAttrs","createElement","Fragment","children","propTypes","node","oneOfType","string","array","object","func","bool","defaultProps"],"sources":["C:/Users/Abdul Rehman/Desktop/Project/First_And_Second_Module_v1.0/frontend/node_modules/@coreui/react/es/dropdown/CDropdownToggle.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js';\nimport CButton from '../button/CButton';\nimport CLink from '../link/CLink';\nimport { Context } from './CDropdown'; //component - CoreUI / CDropdownToggle\n\nvar CDropdownToggle = function CDropdownToggle(props) {\n  var _togglerAttrs;\n\n  var className = props.className,\n      innerRef = props.innerRef,\n      onClick = props.onClick,\n      caret = props.caret,\n      split = props.split,\n      tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"innerRef\", \"onClick\", \"caret\", \"split\", \"tag\"]);\n\n  var _useContext = useContext(Context),\n      reference = _useContext.reference,\n      setReference = _useContext.setReference,\n      isOpen = _useContext.isOpen,\n      setIsOpen = _useContext.setIsOpen,\n      inNav = _useContext.inNav,\n      setSplit = _useContext.setSplit;\n\n  innerRef && innerRef(reference);\n  useEffect(function () {\n    setSplit(split);\n  });\n\n  var click = function click(e) {\n    if (props.disabled) {\n      return;\n    }\n\n    onClick && onClick(e);\n    setIsOpen(!isOpen);\n  };\n\n  var Tag = tag || (inNav ? CLink : CButton);\n  var classes = classNames(className, {\n    'dropdown-toggle': caret && !split,\n    'nav-link': inNav\n  });\n  var togglerAttrs = (_togglerAttrs = {\n    onClick: click,\n    'aria-expanded': isOpen ? 'true' : 'false',\n    'aria-haspopup': 'true',\n    'aria-label': 'Dropdown toggle'\n  }, _togglerAttrs[\"\" + (tag && typeof tag === 'string' ? 'ref' : 'innerRef')] = setReference, _togglerAttrs['role'] = Tag === CButton ? null : 'button', _togglerAttrs);\n\n  if (split) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CButton, attributes, props.children), /*#__PURE__*/React.createElement(CButton, _extends({\n      className: \"dropdown-toggle dropdown-toggle-split\"\n    }, togglerAttrs, attributes), ''));\n  } else {\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      className: classes\n    }, togglerAttrs, attributes));\n  }\n};\n\nCDropdownToggle.propTypes = {\n  tag: tagPropType,\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  caret: PropTypes.bool,\n  onClick: PropTypes.func,\n  split: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nCDropdownToggle.defaultProps = {\n  caret: true\n};\nexport default CDropdownToggle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}