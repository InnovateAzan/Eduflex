{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js'; //component - CoreUI / CEmbed\n\nvar CEmbed = function CEmbed(props) {\n  var Tag = props.tag,\n    className = props.className,\n    innerRef = props.innerRef,\n    ratio = props.ratio,\n    attributes = _objectWithoutPropertiesLoose(props, [\"tag\", \"className\", \"innerRef\", \"ratio\"]); //render\n\n  var classes = classNames(className, 'embed-responsive', \"embed-responsive-\" + ratio);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    className: classes\n  }, attributes, {\n    ref: innerRef\n  }));\n};\nCEmbed.propTypes = {\n  tag: tagPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  ratio: PropTypes.oneOf(['21by9', '16by9', '4by3', '1by1'])\n};\nCEmbed.defaultProps = {\n  tag: 'div',\n  ratio: '16by9'\n};\nexport default CEmbed;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","classNames","tagPropType","CEmbed","props","Tag","tag","className","innerRef","ratio","attributes","classes","createElement","ref","propTypes","oneOfType","string","array","object","func","oneOf","defaultProps"],"sources":["C:/Users/Abdul Rehman/Desktop/Project/First_And_Second_Module_v1.0/frontend/node_modules/@coreui/react/es/embed/CEmbed.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js'; //component - CoreUI / CEmbed\n\nvar CEmbed = function CEmbed(props) {\n  var Tag = props.tag,\n      className = props.className,\n      innerRef = props.innerRef,\n      ratio = props.ratio,\n      attributes = _objectWithoutPropertiesLoose(props, [\"tag\", \"className\", \"innerRef\", \"ratio\"]); //render\n\n\n  var classes = classNames(className, 'embed-responsive', \"embed-responsive-\" + ratio);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    className: classes\n  }, attributes, {\n    ref: innerRef\n  }));\n};\n\nCEmbed.propTypes = {\n  tag: tagPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  ratio: PropTypes.oneOf(['21by9', '16by9', '4by3', '1by1'])\n};\nCEmbed.defaultProps = {\n  tag: 'div',\n  ratio: '16by9'\n};\nexport default CEmbed;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,QAAQ,oBAAoB,CAAC,CAAC;;AAElD,IAAIC,MAAM,GAAG,SAASA,MAAMA,CAACC,KAAK,EAAE;EAClC,IAAIC,GAAG,GAAGD,KAAK,CAACE,GAAG;IACfC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAC3BC,QAAQ,GAAGJ,KAAK,CAACI,QAAQ;IACzBC,KAAK,GAAGL,KAAK,CAACK,KAAK;IACnBC,UAAU,GAAGZ,6BAA6B,CAACM,KAAK,EAAE,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAGlG,IAAIO,OAAO,GAAGV,UAAU,CAACM,SAAS,EAAE,kBAAkB,EAAE,mBAAmB,GAAGE,KAAK,CAAC;EACpF,OAAO,aAAaV,KAAK,CAACa,aAAa,CAACP,GAAG,EAAER,QAAQ,CAAC;IACpDU,SAAS,EAAEI;EACb,CAAC,EAAED,UAAU,EAAE;IACbG,GAAG,EAAEL;EACP,CAAC,CAAC,CAAC;AACL,CAAC;AAEDL,MAAM,CAACW,SAAS,GAAG;EACjBR,GAAG,EAAEJ,WAAW;EAChBK,SAAS,EAAEP,SAAS,CAACe,SAAS,CAAC,CAACf,SAAS,CAACgB,MAAM,EAAEhB,SAAS,CAACiB,KAAK,EAAEjB,SAAS,CAACkB,MAAM,CAAC,CAAC;EACrF;EACAV,QAAQ,EAAER,SAAS,CAACe,SAAS,CAAC,CAACf,SAAS,CAACkB,MAAM,EAAElB,SAAS,CAACmB,IAAI,CAAC,CAAC;EACjEV,KAAK,EAAET,SAAS,CAACoB,KAAK,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;AAC3D,CAAC;AACDjB,MAAM,CAACkB,YAAY,GAAG;EACpBf,GAAG,EAAE,KAAK;EACVG,KAAK,EAAE;AACT,CAAC;AACD,eAAeN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}