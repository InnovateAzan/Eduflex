{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js'; //component - CoreUI / CFormText\n\nvar CFormText = function CFormText(props) {\n  var Tag = props.tag,\n    className = props.className,\n    innerRef = props.innerRef,\n    color = props.color,\n    attributes = _objectWithoutPropertiesLoose(props, [\"tag\", \"className\", \"innerRef\", \"color\"]); //render\n\n  var classes = classNames('form-text', color && \"text-\" + color, className);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    className: classes\n  }, attributes, {\n    ref: innerRef\n  }));\n};\nCFormText.propTypes = {\n  tag: tagPropType,\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  color: PropTypes.string\n};\nCFormText.defaultProps = {\n  tag: 'small',\n  color: 'muted'\n};\nexport default CFormText;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","classNames","tagPropType","CFormText","props","Tag","tag","className","innerRef","color","attributes","classes","createElement","ref","propTypes","children","node","oneOfType","string","array","object","func","defaultProps"],"sources":["C:/Users/Abdul Rehman/Desktop/Project/First_And_Second_Module_v1.0/frontend/node_modules/@coreui/react/es/form/CFormText.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { tagPropType } from '../utils/helper.js'; //component - CoreUI / CFormText\n\nvar CFormText = function CFormText(props) {\n  var Tag = props.tag,\n      className = props.className,\n      innerRef = props.innerRef,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"tag\", \"className\", \"innerRef\", \"color\"]); //render\n\n\n  var classes = classNames('form-text', color && \"text-\" + color, className);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    className: classes\n  }, attributes, {\n    ref: innerRef\n  }));\n};\n\nCFormText.propTypes = {\n  tag: tagPropType,\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  //\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  color: PropTypes.string\n};\nCFormText.defaultProps = {\n  tag: 'small',\n  color: 'muted'\n};\nexport default CFormText;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,QAAQ,oBAAoB,CAAC,CAAC;;AAElD,IAAIC,SAAS,GAAG,SAASA,SAASA,CAACC,KAAK,EAAE;EACxC,IAAIC,GAAG,GAAGD,KAAK,CAACE,GAAG;IACfC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAC3BC,QAAQ,GAAGJ,KAAK,CAACI,QAAQ;IACzBC,KAAK,GAAGL,KAAK,CAACK,KAAK;IACnBC,UAAU,GAAGZ,6BAA6B,CAACM,KAAK,EAAE,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAGlG,IAAIO,OAAO,GAAGV,UAAU,CAAC,WAAW,EAAEQ,KAAK,IAAI,OAAO,GAAGA,KAAK,EAAEF,SAAS,CAAC;EAC1E,OAAO,aAAaR,KAAK,CAACa,aAAa,CAACP,GAAG,EAAER,QAAQ,CAAC;IACpDU,SAAS,EAAEI;EACb,CAAC,EAAED,UAAU,EAAE;IACbG,GAAG,EAAEL;EACP,CAAC,CAAC,CAAC;AACL,CAAC;AAEDL,SAAS,CAACW,SAAS,GAAG;EACpBR,GAAG,EAAEJ,WAAW;EAChBa,QAAQ,EAAEf,SAAS,CAACgB,IAAI;EACxBT,SAAS,EAAEP,SAAS,CAACiB,SAAS,CAAC,CAACjB,SAAS,CAACkB,MAAM,EAAElB,SAAS,CAACmB,KAAK,EAAEnB,SAAS,CAACoB,MAAM,CAAC,CAAC;EACrF;EACAZ,QAAQ,EAAER,SAAS,CAACiB,SAAS,CAAC,CAACjB,SAAS,CAACoB,MAAM,EAAEpB,SAAS,CAACqB,IAAI,CAAC,CAAC;EACjEZ,KAAK,EAAET,SAAS,CAACkB;AACnB,CAAC;AACDf,SAAS,CAACmB,YAAY,GAAG;EACvBhB,GAAG,EAAE,OAAO;EACZG,KAAK,EAAE;AACT,CAAC;AACD,eAAeN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}